<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:axon="http://www.axonframework.org/schema/core"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:axon-amqp="http://www.axonframework.org/schema/amqp"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.axonframework.org/schema/core
       http://www.axonframework.org/schema/axon-core.xsd
       http://www.axonframework.org/schema/amqp
       http://www.axonframework.org/schema/axon-amqp.xsd">

    <axon:annotation-config/>

    <axon:event-bus id="eventBus"/>

    <axon:command-bus id="commandBus">
        <axon:dispatchInterceptors>
            <bean class="org.axonframework.commandhandling.interceptors.BeanValidationInterceptor"/>
        </axon:dispatchInterceptors>
    </axon:command-bus>

    <bean id="commandGateway" class="org.axonframework.commandhandling.gateway.CommandGatewayFactoryBean">
        <property name="commandBus" ref="commandBus"/>
    </bean>

    <bean id="snapshotter" class="org.axonframework.eventsourcing.SpringAggregateSnapshotter">
        <property name="eventStore" ref="eventStore"/>
        <property name="executor" ref="taskExecutor"/>
    </bean>

    <bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="2"/>
        <property name="maxPoolSize" value="5"/>
        <property name="waitForTasksToCompleteOnShutdown" value="true"/>
    </bean>

    <bean id="ehcache" class="org.axonframework.cache.EhCacheAdapter">
        <constructor-arg name="ehCache" ref="wrappedEhcache"/>
    </bean>

    <bean id="wrappedEhcache" factory-bean="cacheManager" factory-method="getCache">
        <constructor-arg value="testCache"/>
    </bean>

    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>


    <axon:event-sourcing-repository id="userRepository"
                                    aggregate-type="com.szss.axon.trader.users.command.User"
                                    cache-ref="ehcache"
                                    event-bus="eventBus"
                                    event-store="eventStore">
        <axon:snapshotter-trigger event-count-threshold="50" snapshotter-ref="snapshotter"/>
    </axon:event-sourcing-repository>

    <axon-amqp:terminal id="terminal"
                        connection-factory="amqpConnection" serializer="serializer" exchange-name="AxonEventBusExchange">
        <axon-amqp:default-configuration transaction-manager="transactionManager" transaction-size="25" prefetch="200"
                                         error-handler="loggingErrorHandler"/>
    </axon-amqp:terminal>

    <bean id="amqpConnection" class="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/>

    <beans profile="mongodb">
        <bean id="eventStore" class="org.axonframework.eventstore.mongo.MongoEventStore">
            <constructor-arg ref="mongoTemplate"/>
        </bean>

        <bean id="sagaRepository" class="org.axonframework.saga.repository.mongo.MongoSagaRepository">
            <constructor-arg ref="mongoSagaTemplate"/>
            <property name="resourceInjector">
                <bean class="org.axonframework.saga.spring.SpringResourceInjector"/>
            </property>
        </bean>
    </beans>
</beans>